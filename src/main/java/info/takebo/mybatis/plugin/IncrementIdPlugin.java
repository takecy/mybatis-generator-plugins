package info.takebo.mybatis.plugin;

import java.util.List;

import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;
import org.mybatis.generator.api.dom.java.Interface;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.Parameter;
import org.mybatis.generator.api.dom.java.TopLevelClass;

/**
 * add incrementId method in mapper
 */
public class IncrementIdPlugin extends PluginAdapter {

	@Override
	public boolean validate(List<String> warnings) {
		return true;
	}

	@Override
	public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {

		// TODO

		List<IntrospectedColumn> keys = introspectedTable.getPrimaryKeyColumns();

		// PKが1つではない、またはPKが無いテーブルは除外
		if (keys == null || keys.size() != 1)
			return super.clientGenerated(interfaze, topLevelClass, introspectedTable);

		IntrospectedColumn key = keys.get(0);

		String tableName = introspectedTable.getTableConfiguration().getTableName();
		String keyColumnName = key.getActualColumnName();

		Method incrementIdMethod = new Method("incrementId");
		Parameter parameter = new Parameter(new FullyQualifiedJavaType(introspectedTable.getBaseRecordType()), "id");
		incrementIdMethod.addParameter(parameter);

		FullyQualifiedJavaType returnType = new FullyQualifiedJavaType("long");
		incrementIdMethod.setReturnType(returnType);

		addInsertAnnotation(incrementIdMethod, tableName, keyColumnName);
		addOptionAnnotation(incrementIdMethod, interfaze, keyColumnName);

		incrementIdMethod.addJavaDocLine(javaDoc());

		interfaze.addMethod(incrementIdMethod);

		return super.clientGenerated(interfaze, topLevelClass, introspectedTable);
	}

	private String javaDoc() {
		return "/**\r\n" +
				"	 * This method was generated by MyBatis IncrementId Plugin.\r\n" +
				"	 * @mbggenerated\r\n" +
				"	 */";
	}

	private void addInsertAnnotation(Method method, String tableName, String keyColumnName) {
		String annotation = "@Insert({\"update " + tableName + "\", \" set " + keyColumnName + " = LAST_INSERT_ID(" + keyColumnName + " + 1)\"})";
		method.addAnnotation(annotation);
	}

	private void addOptionAnnotation(Method method, Interface interfaze, String keyColumnName) {
		FullyQualifiedJavaType importedType = new FullyQualifiedJavaType("org.apache.ibatis.annotations.Options");
		interfaze.addImportedType(importedType);

		String keyPropertyName = toLowerCamelCase(keyColumnName);

		String annotation = "@Options(useGeneratedKeys = true, keyProperty = \"" + keyPropertyName + "\", keyColumn = \"" + keyColumnName + "\")";
		method.addAnnotation(annotation);
	}

	private String toLowerCamelCase(String s) {
		String[] parts = s.split("_");
		String camelCaseString = "";
		for (int i = 0; i < parts.length; i++) {
			if (i == 0) {
				camelCaseString += parts[i];
				continue;
			}
			camelCaseString += toProperCase(parts[i]);
		}
		return camelCaseString;
	}

	private String toProperCase(String s) {
		return s.substring(0, 1).toUpperCase() +
				s.substring(1).toLowerCase();
	}
}